<section class="relative h-full w-full flex flex-col">
  <section class="flex flex-col sm:flex-row sm:justify-between items-center p-2">
    <%= render_slot(@header) %>
    <div class="w-full max-w-[20em] flex items-center">
      <.button class="cursor-pointer" phx-click="canvas-zoom-out" phx-value-name={@meta.name}>
        <.icon name="hero-magnifying-glass-minus" />
      </.button>
      <form class="w-full" phx-change="canvas-set-zoom" phx-value-name={@meta.name}>
        <.datatype_input
          class="md:ml-8"
          type={Exshome.Datatype.Integer}
          value={@meta.zoom.value}
          validations={
            %{
              min: @meta.zoom.min,
              max: @meta.zoom.max
            }
          }
          name="zoom"
        />
      </form>
      <.button class="cursor-pointer" phx-click="canvas-zoom-in" phx-value-name={@meta.name}>
        <.icon name="hero-magnifying-glass-plus" />
      </.button>
    </div>
  </section>
  <section
    id={"#{@meta.name}-wrapper"}
    class="flex-grow h-screen select-none relative"
    data-viewbox-x={@meta.viewbox.x}
    data-viewbox-y={@meta.viewbox.y}
    data-name={@meta.name}
    phx-hook="SvgCanvas"
  >
    <svg
      id={"#{@meta.name}-screen"}
      class={"max-h-full #{@meta.class}"}
      viewBox={"0 0 #{@meta.screen.width} #{@meta.screen.height}"}
      xmlns="http://www.w3.org/2000/svg"
    >
      <svg
        id={"#{@meta.name}-body"}
        class="h-full w-full select-none"
        viewBox={"#{@meta.viewbox.x} #{@meta.viewbox.y} #{@meta.viewbox.width} #{@meta.viewbox.height}"}
        xmlns="http://www.w3.org/2000/svg"
      >
        <rect
          data-component="canvas-background"
          x={@meta.viewbox.x}
          y={@meta.viewbox.y}
          height={@meta.viewbox.height}
          width={@meta.viewbox.width}
          data-drag="canvas-move-background"
          class="fill-transparent"
        />
        <g phx-update="stream" id={"#{@meta.name}-content"} class="h-full w-full">
          <%= for {id, component} <- @components do %>
            <.render_component
              id={id}
              component={component}
              context={%{name: @meta.name, drag: "canvas-move"}}
            />
          <% end %>
        </g>
      </svg>
      <rect
        :if={@meta.viewbox.width < @meta.canvas.width}
        class="fill-gray-200/80 hover:fill-gray-200 dark:fill-gray-700/80 dark:hover:fill-gray-700"
        rx="10"
        ry="10"
        x={@meta.scroll.x}
        y={@meta.screen.height - @meta.scroll.height}
        height={@meta.scroll.height}
        width={@meta.scroll.size_x}
        data-drag="canvas-scroll-body-x"
        data-component="scroll-body-x"
      />
      <rect
        :if={@meta.viewbox.height < @meta.canvas.height}
        class="fill-gray-200/80 hover:fill-gray-200 dark:fill-gray-700/80 dark:hover:fill-gray-700"
        rx="10"
        ry="10"
        x={@meta.screen.width - @meta.scroll.height}
        y={@meta.scroll.y}
        height={@meta.scroll.size_y}
        width={@meta.scroll.height}
        data-drag="canvas-scroll-body-y"
        data-component="scroll-body-y"
      />
      <.render_trashbin id={"#{@meta.name}-trashbin"} trashbin={@meta.trashbin} />
    </svg>
    <.render_menu name={@meta.name} open?={@meta.menu.open?} menu_items={@menu_items} />
  </section>
</section>
